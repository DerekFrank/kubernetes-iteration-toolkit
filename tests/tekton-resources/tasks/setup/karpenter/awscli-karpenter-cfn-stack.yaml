apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: awscli-karpenter-cfn-stack
  namespace: scalability
spec:
  description: |
    Creates the karpenter instance roles and sqs interruption queue
  params:
  - name: cluster-name
    description: The name of the cluster
  - name: karpenter-version
    description: Version of Karpenter to deploy
  - name: endpoint
    description: Endpoint to use with EKS
  - name: region
    default: us-west-2
    description: The region where the cluster is in.
  - name: account-id
    description: The aws account the cluster is running in
  workspaces:
  - name: source
    mountPath: /src/karpenter/
  steps:
  - name: create-stack
    image: alpine/k8s:1.23.7
    script: |
      STACK_NAME=Karpenter-$(params.cluster-name)
      STACK_STATUS=$(aws cloudformation describe-stacks --query 'Stacks[?StackName==`'${STACK_NAME}'`].StackStatus' --output text  --region $(params.region))
      curl -fsSL https://raw.githubusercontent.com/aws/karpenter-provider-aws/v1.6.1/website/content/en/preview/getting-started/getting-started-with-karpenter/cloudformation.yaml -o $(workspaces.source.path)cloudformation.yaml

      cat /src/karpenter/cloudformation.yaml
      
      aws eks update-cluster-config --name $(params.cluster-name) --access-config authenticationMode=API_AND_CONFIG_MAP --endpoint $(params.endpoint)
      
      if [[ "$STACK_STATUS" == "" ]]; then
        aws cloudformation deploy \
          --stack-name "Karpenter-$(params.cluster-name)" \
          --template-file $(workspaces.source.path)cloudformation.yaml \
          --capabilities CAPABILITY_NAMED_IAM \
          --parameter-overrides "ClusterName=$(params.cluster-name)"
    
        aws cloudformation wait stack-create-complete --stack-name $STACK_NAME --region $(params.region)
        echo "CREATED_CFN_STACK=$STACK_NAME"
      else
          echo "$STACK_NAME Already exists"
      fi

      eksctl create iamserviceaccount \
        --name karpenter \
        --namespace karpenter \
        --cluster "$(params.cluster-name)" \
        --attach-policy-arn "arn:aws:iam::$(params.account-id):role/$(params.cluster-name)-karpenter" \
        --approve \
        --override-existing-serviceaccounts

      export AWS_EKS_ENDPOINT=$(params.endpoint)
      eksctl utils associate-iam-oidc-provider --cluster "$(params.cluster-name)" --approve

      aws eks create-access-entry \
        --cluster-name "$(params.cluster-name)" \
        --principal-arn "arn:aws:iam::$(params.account-id):role/KarpenterNodeRole-$(params.cluster-name)" \
        --endpoint $(params.endpoint) \
        --type EC2_LINUX

