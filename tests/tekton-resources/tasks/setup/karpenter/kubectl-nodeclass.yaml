apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: create-ec2nodeclass
  namespace: scalability
spec:
  description: |
    Install karpenter on the cluster
  params:
  - name: cluster-name
    description: The name of the cluster
  - name: endpoint
    description: eks endpoint to use
  - name: karpenter-nodeclass-url
    description: url of the nodeclass template to use
  workspaces:
  - name: source
    mountPath: /src/karpenter/
  steps:
  - name: create-ec2nodeclass
    image: alpine/k8s:1.23.7
    script: |
      export CLUSTER_CA=$(aws eks describe-cluster \
          --name $(params.cluster-name) \
          --endpoint-url $(params.endpoint) \
          --query 'cluster.certificateAuthority.data' \
          --output text)


      export CLUSTER_ENDPOINT=$(aws eks describe-cluster \
          --name $(params.cluster-name) \
          --endpoint-url $(params.endpoint) \
          --query 'cluster.endpoint' \
          --output text)

      export CLUSTER_NAME=$(params.cluster-name)

      export ALIAS_VERSION=latest

      echo "Cluster endpoint: ${CLUSTER_ENDPOINT}"

      curl -fsSL $(params.karpenter-nodeclass-url) -o $(workspaces.source.path)ec2nodeclass.yaml

      cat $(workspaces.source.path)ec2nodeclass.yaml

      envsubst < $(workspaces.source.path)ec2nodeclass.yaml > $(workspaces.source.path)ec2nodeclass-modified.yaml

      ls $(workspaces.source.path)

      cat $(workspaces.source.path)ec2nodeclass-modified.yaml

      aws eks update-kubeconfig --name $(params.cluster-name) --endpoint $(params.endpoint)
      
      kubectl apply -f $(workspaces.source.path)ec2nodeclass-modified.yaml

      kubectl get ec2nodeclass -o yaml
